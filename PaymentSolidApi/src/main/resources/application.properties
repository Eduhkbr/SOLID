spring.application.name=PaymentSolidApi

#  POSTGRESQL
spring.datasource.url=jdbc:postgresql://localhost:5432/paymentdb
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}

# --- Configuracoes do JPA e Hibernate ---
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true

# Garante que o Hibernate n�o tente criar/alterar tabelas
spring.jpa.hibernate.ddl-auto=none

# --- Servidor ---
server.port=8082

# --- Perfil Ativo ---
spring.profiles.active=dev

# --- Logging ---
logging.level.root=INFO
logging.level.br.com.fiap.PaymentSolidApi=DEBUG

# --- OpenAPI (Swagger) ---
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs
springdoc.packagesToScan=br.com.fiap.PaymentSolidApi.adapter.in.controller
springdoc.api-docs.enabled=false
springdoc.swagger-ui.url=/openapi.yaml

# --- Jackson (Serializacao JSON) ---
spring.jackson.serialization.INDENT_OUTPUT=true

# --- Pool de Conexao (Hikari) ---
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.connection-timeout=30000

# --- Upload de Arquivos ---
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# --- Configuracoes do RabbitMQ ---
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=${SPRING_RABBITMQ_USERNAME}
spring.rabbitmq.password=${SPRING_RABBITMQ_PASSWORD}

# --- Nomenclaturas para a Fila de Comprovantes ---
# A exchange é responsavel por rotear as mensagens
app.rabbitmq.exchange.payment=payment.exchange

# A routing key ajuda a exchange a decidir para qual fila enviar a mensagem
app.rabbitmq.routingkey.receipt=payment.receipt.key
